{"version":3,"file":"static/js/736.6a143935.chunk.js","mappings":"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","sources":["../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/create-h.js","../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hastscript/lib/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-from-parse5/lib/index.js","../node_modules/zwitch/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/parse5/dist/common/unicode.js","../node_modules/parse5/dist/common/error-codes.js","../node_modules/parse5/dist/tokenizer/preprocessor.js","../node_modules/parse5/dist/common/token.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../node_modules/parse5/dist/common/html.js","../node_modules/parse5/dist/tokenizer/index.js","../node_modules/parse5/dist/parser/open-element-stack.js","../node_modules/parse5/dist/parser/formatting-element-list.js","../node_modules/parse5/dist/tree-adapters/default.js","../node_modules/parse5/dist/common/doctype.js","../node_modules/parse5/dist/common/foreign-content.js","../node_modules/parse5/dist/parser/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/parse5/dist/serializer/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map",null,null,null,null,"/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map",null,"import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n"],"names":["search","buttonTypes","Set","own","hasOwnProperty","createH","schema","defaultTagName","caseSensitive","adjust","values","result","index","length","toLowerCase","createAdjustMap","selector","properties","node","_len","arguments","children","Array","_key","undefined","type","child","unshift","value","props","previous","tagName","start","lastIndex","match","exec","subvalue","slice","id","isArray","className","push","parseSelector","call","name","has","isProperties","key","addProperty","addChild","content","info","find","Number","isNaN","spaceSeparated","spaces","commaSeparated","commas","commaOrSpaceSeparated","join","parsePrimitive","property","concat","style","String","finalResult","nodes","Error","number","boolean","overloadedBoolean","normalize","h","html","s","svg","webNamespaces","mathml","xlink","xml","xmlns","proto","Object","prototype","fromParse5","tree","options","settings","one","file","location","space","verbose","state","nodeName","reference","data","patch","quirksMode","mode","all","childNodes","doc","loc","indices","test","toPoint","offset","line","column","toOffset","point","end","assert","position","namespaceURI","attrs","attribute","prefix","fn","pos","sourceCodeLocation","startTag","endTag","element","results","from","to","createLocation","tail","assign","opening","closing","startLine","startCol","startOffset","endLine","endCol","endOffset","zwitch","invalid","handlers","unknown","parameters","this","emptyOptions","root","parentSchema","currentSchema","prop","createProperty","parentNode","fragment","text","comment","doctype","publicId","systemId","indexOf","namespace","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","constructor","handler","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","code","_err","onParseError","_addGap","_processSurrogate","nextCp","charCodeAt","isSurrogatePair","$","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","write","chunk","isLastChunk","insertHtmlAtCurrentPos","startsWith","pattern","i","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","count","pop","TokenType","getTokenAttr","token","attrName","Uint16Array","split","map","c","decodeMap","Map","fromCodePoint","_a","codePoint","output","fromCharCode","replaceCodePoint","get","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","base","digitCount","Math","pow","parseInt","substr","startIdx","char","UPPER_F","LOWER_F","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","current","valueLength","VALUE_LENGTH","determineBranch","max","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","htmlDecodeTree","xmlDecodeTree","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","returnState","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","resume","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","create","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","$$","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","document","items","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","lastIndexOf","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","replace","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","splice","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","includes","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","remove","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","entries","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","entry","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","entryIndex","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createElement","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","Parser","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","tokenizer","activeFormattingElements","fragmentContextID","_setContextModes","openElements","parse","parser","getFragmentParser","opts","TN","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","parent","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","siblings","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","foreignContent","_reconstructActiveFormattingElements","listLength","endIndex","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","p","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","unicode","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","_ref","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","shift","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","TYPE","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","codePointAt","getEscaper","regex","lastIdx","knownMdxNames","parseOptions","raw","head","Boolean","documentMode","handleRaw","handle","stitches","resetTokenizer","pointStart","visit","stitch","toParse5","tag","Token","createParse5Location","pointEnd","clone","structuredClone","cloneWithoutChildren","fakeRoot","setPoint","node_","passThrough","extra","rehypeRaw"],"sourceRoot":""}